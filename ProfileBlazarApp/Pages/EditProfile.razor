@page "/edit-profile"
@using ProfileBlazarApp.Models
@using ProfileBlazarApp.Services
@inject ProfileAPIClient ProfileAPIClient
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <h3>Edit Profile</h3>

    @if (_profile == null)
    {
        <p>Loading profile for editing...</p>
    }
    else
    {
        <EditForm Model="@_profile" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="card">
                <div class="card-body">
                    <div class="mb-3">
                        <label for="firstName" class="form-label">First Name</label>
                        <InputText id="firstName" @bind-Value="_profile.FirstName" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="lastName" class="form-label">Last Name</label>
                        <InputText id="lastName" @bind-Value="_profile.LastName" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <InputText id="email" @bind-Value="_profile.Email" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="phone" class="form-label">Phone</label>
                        <InputText id="phone" @bind-Value="_profile.Phone" class="form-control" />
                    </div>

                    <div class="mt-3">
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                        <a href="/view-profile" class="btn btn-secondary ms-2">Cancel</a>
                    </div>
                </div>
            </div>
        </EditForm>
    }
</div>

@code {
    private Person? _profile;

    protected override async Task OnInitializedAsync()
    {
        _profile = await ProfileAPIClient.GetProfileAsync();
    }

    private async Task HandleValidSubmit()
    {
        if (_profile != null)
        {
            await ProfileAPIClient.UpdateProfileAsync(_profile);
            NavigationManager.NavigateTo("/view-profile");
        }
    }
}